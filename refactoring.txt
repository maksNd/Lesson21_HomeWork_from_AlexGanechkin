Я изучил работу (https://github.com/maksNd/Lesson21_HomeWork_from_AlexGanechkin.git)

- classes.py:
    * все классы описаны в одном файле (возможно лучше разнести по разным файлам)
    * отсутствие типизации из-за этого страдает читаемость:
        строка 52 - непонятно какие данные в словаре (предлагаемое решение self._items:dict[str, int] = {})
    * плохое название переменной (строка 109) (возможно лучше назвать 'from' или 'original_storage')
    * нехватает докстрингов функции (строка 128) для лучшей читаемости кода
        (предлагаемое решение: 'Разбивает строку запроса на части и возвращает соответствующую часть.')

- abstraction.py
    * добавить None к сигнатурам методов добавления и удаления, чтобы было ясно, что они ничего не возвращают.

- utils.py
    * константы лучше писать заглавными буквами (строка 3, 5)
    * неуместное использование дандер метода (строка 19)
        (предлагаемое решение - добавить соответствующий гетер в класс Store)

- main.py
    * переменные from_vault, to_vault лучше описать непосредственно перед использованием (строка 6, 7)
    * ненужные комментарии (строка 8)
    * вместо списка лучше использовать кортеж (строка 23, 33)
    * неуместное использование дандер метода (строка 19)
        (предлагаемое решение - добавить соответствующий гетер в класс 28, 30, 49)
    * ненужный код (строки 23, 24, 25), т.к та же проверка происходит далее в коде (строки 33, 34, 35)
